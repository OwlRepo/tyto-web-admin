import React, { useState, useContext } from 'react';
import { Heading, Flex, Button, Stack, HStack, Text, Input } from "@chakra-ui/react";
import Head from "next/head";
import NavLoginButtonContext from '../constant/context/NavLogInButtonContext';
import Image from "next/image";
import Router from "next/router";
import { useToast } from "@chakra-ui/toast";
import firestore_db from '../constant/configurations/firebase_init';
import { collection, getDocs, getDoc, where, query } from "@firebase/firestore";

export default function Home() {
  const [code, setCode] = useState("");
  const toast = useToast();
  const [isVerifyingLogin, setIsVerifyingLogin] = useState(false);
  const navLoginButtonContext = useContext(NavLoginButtonContext);

  async function getloadData() {
    const verify_ref = query(collection(firestore_db,
      'access_codes'), where("code", "==", code))

    const verification = await getDocs(verify_ref);
    verification.docs.map((doc) => {
      if (doc.data().length != 0 && doc.data().code == code) {
        localStorage.setItem("code", code)
        Router.push("/sign-in");
        toast({
          title: "Log in successful",
          description: "Loading Login...",
          status: "success",
          duration: 2500,
          isClosable: true,
          position: "bottom-right",
        });
        setIsVerifyingLogin(false);
       
      }
      else {
        toast({
          title: "Log in failed",
          description: "invalid input",
          status: 'error',
          duration: 2500,
          isClosable: true,
          position: "bottom-right",
        });
      }
    })
  }
  return (
    <>
      <Head>
        <title>Index</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Flex {...styleProps.indexWrapper}>
        <Flex flexDirection="column" {...styleProps.formWrapper}>
          <HStack>
            <Heading color="white"
              fontSize="47"
            >ACCESS</Heading>
            <Heading color={"blue.300"}
              fontSize="47"
            >VERIFICATION</Heading>
          </HStack>
          <Text mt="1vh" fontSize="23">Please enter the access code to proceed.</Text>
          <Input
            onChange={(value) => setCode(value.target.value)}
            width="80%"
            size="lg"
            type="password"
            h="35%"
            mt="4vh"
            variant="solid"
            color="black"
            fontSize="60"
          />
          <Button
            bg="solid_button"
            variant="solid"
            colorScheme="cyan"
            color="white"
            backgroundColor="#00adb5"
            marginTop={"10px"}
            onClick={() => {getloadData()}}
            mt="4vh"
            h="7vh"
            w="10vw"
          >
            {isVerifyingLogin ? (
              <Spinner
                thickness="4px"
                speed="0.65s"
                color={"blue"}
                size="md"
              />
            ) : (
              "SUBMIT"
            )}
          </Button>
        </Flex>
      </Flex>
    </>
  );
}

const styleProps = {
  indexWrapper: {
    height: "100vh",
    flexDirection: "column",
    alignItems: "center",
    justifyContent: "center",
    bgColor: "#22202A",
  },
  formWrapper: {
    borderRadius: "xl",
    width: "88vh",
    height: "44vh",
    flexDirection: "column",
    alignItems: "center",
    padding: "2vh",
    color: "white",
    bgColor: "#3B3A42",
    
  }
}